ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBFS_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_EP_1_ISR, %function
  24              	USBFS_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\USBFS_episr.c"
   1:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_episr.c **** * \file USBFS_episr.c
   3:Generated_Source\PSoC5/USBFS_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBFS_episr.c **** *
   5:Generated_Source\PSoC5/USBFS_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBFS_episr.c **** *
   8:Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBFS_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBFS_episr.c **** 
  16:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:Generated_Source\PSoC5/USBFS_episr.c **** 
  19:Generated_Source\PSoC5/USBFS_episr.c **** 
  20:Generated_Source\PSoC5/USBFS_episr.c **** 
  21:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBFS_episr.c **** 
  26:Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBFS_episr.c **** 
  28:Generated_Source\PSoC5/USBFS_episr.c **** 
  29:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
  31:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 2


  32:Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBFS_episr.c ****     *
  34:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBFS_episr.c ****     *
  36:Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:Generated_Source\PSoC5/USBFS_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBFS_episr.c **** 
  40:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBFS_episr.c **** 
  44:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBFS_episr.c **** 
  46:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBFS_episr.c **** 
  48:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBFS_episr.c ****         {
  51:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBFS_episr.c ****     
  55:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  32              		.loc 1 55 0
  33 0000 0122     		movs	r2, #1
  34 0002 094B     		ldr	r3, .L3
  35 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBFS_episr.c ****             
  57:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBFS_episr.c ****         */
  61:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBFS_episr.c ****         {
  65:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  36              		.loc 1 66 0
  37 0006 0F3B     		subs	r3, r3, #15
  38 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBFS_episr.c ****             
  68:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  39              		.loc 1 69 0
  40 000a 084B     		ldr	r3, .L3+4
  41 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  42 000e 03F00303 		and	r3, r3, #3
  43 0012 9342     		cmp	r3, r2
  44 0014 04D0     		beq	.L2
  70:Generated_Source\PSoC5/USBFS_episr.c ****             {
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 3


  71:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  45              		.loc 1 71 0
  46 0016 054A     		ldr	r2, .L3+4
  47 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  48 001a 83F08003 		eor	r3, r3, #128
  49 001e D373     		strb	r3, [r2, #15]
  50              	.L2:
  72:Generated_Source\PSoC5/USBFS_episr.c ****             }
  73:Generated_Source\PSoC5/USBFS_episr.c **** 
  74:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBFS_episr.c ****             */
  80:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  51              		.loc 1 80 0
  52 0020 0122     		movs	r2, #1
  53 0022 024B     		ldr	r3, .L3+4
  54 0024 5A73     		strb	r2, [r3, #13]
  55 0026 7047     		bx	lr
  56              	.L4:
  57              		.align	2
  58              	.L3:
  59 0028 0B600040 		.word	1073766411
  60 002c 00000000 		.word	USBFS_EP
  61              		.cfi_endproc
  62              	.LFE0:
  63              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
  64              		.section	.text.USBFS_EP_2_ISR,"ax",%progbits
  65              		.align	2
  66              		.global	USBFS_EP_2_ISR
  67              		.thumb
  68              		.thumb_func
  69              		.type	USBFS_EP_2_ISR, %function
  70              	USBFS_EP_2_ISR:
  71              	.LFB1:
  81:Generated_Source\PSoC5/USBFS_episr.c ****         }
  82:Generated_Source\PSoC5/USBFS_episr.c **** 
  83:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:Generated_Source\PSoC5/USBFS_episr.c ****             {
  88:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBFS_episr.c ****             }
  90:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBFS_episr.c ****     
  93:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBFS_episr.c **** 
  95:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBFS_episr.c **** 
  97:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 4


 101:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBFS_episr.c ****         
 104:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBFS_episr.c ****         }
 106:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBFS_episr.c ****     }
 108:Generated_Source\PSoC5/USBFS_episr.c **** 
 109:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBFS_episr.c **** 
 111:Generated_Source\PSoC5/USBFS_episr.c **** 
 112:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBFS_episr.c ****     *
 117:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBFS_episr.c ****     *
 119:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:Generated_Source\PSoC5/USBFS_episr.c ****     {
  72              		.loc 1 121 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 122:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBFS_episr.c **** 
 126:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBFS_episr.c **** 
 128:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBFS_episr.c **** 
 130:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBFS_episr.c ****         {
 133:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBFS_episr.c **** 
 137:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
  77              		.loc 1 137 0
  78 0000 0222     		movs	r2, #2
  79 0002 0A4B     		ldr	r3, .L7
  80 0004 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/USBFS_episr.c **** 
 139:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBFS_episr.c ****         */
 143:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
 145:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 147:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 5


  81              		.loc 1 148 0
  82 0006 0F3B     		subs	r3, r3, #15
  83 0008 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/USBFS_episr.c ****             
 150:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
  84              		.loc 1 151 0
  85 000c 084B     		ldr	r3, .L7+4
  86 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  87 0010 03F00303 		and	r3, r3, #3
  88 0014 012B     		cmp	r3, #1
  89 0016 04D0     		beq	.L6
 152:Generated_Source\PSoC5/USBFS_episr.c ****             {
 153:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  90              		.loc 1 153 0
  91 0018 054A     		ldr	r2, .L7+4
  92 001a D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  93 001c 83F08003 		eor	r3, r3, #128
  94 0020 D376     		strb	r3, [r2, #27]
  95              	.L6:
 154:Generated_Source\PSoC5/USBFS_episr.c ****             }
 155:Generated_Source\PSoC5/USBFS_episr.c **** 
 156:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBFS_episr.c ****             */
 162:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
  96              		.loc 1 162 0
  97 0022 0122     		movs	r2, #1
  98 0024 024B     		ldr	r3, .L7+4
  99 0026 5A76     		strb	r2, [r3, #25]
 100 0028 7047     		bx	lr
 101              	.L8:
 102 002a 00BF     		.align	2
 103              	.L7:
 104 002c 0B600040 		.word	1073766411
 105 0030 00000000 		.word	USBFS_EP
 106              		.cfi_endproc
 107              	.LFE1:
 108              		.size	USBFS_EP_2_ISR, .-USBFS_EP_2_ISR
 109              		.section	.text.USBFS_EP_3_ISR,"ax",%progbits
 110              		.align	2
 111              		.global	USBFS_EP_3_ISR
 112              		.thumb
 113              		.thumb_func
 114              		.type	USBFS_EP_3_ISR, %function
 115              	USBFS_EP_3_ISR:
 116              	.LFB2:
 163:Generated_Source\PSoC5/USBFS_episr.c ****         }
 164:Generated_Source\PSoC5/USBFS_episr.c **** 
 165:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
 169:Generated_Source\PSoC5/USBFS_episr.c ****             {
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 6


 170:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBFS_episr.c ****             }
 172:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBFS_episr.c ****     
 175:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBFS_episr.c **** 
 177:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBFS_episr.c **** 
 179:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBFS_episr.c **** 
 183:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBFS_episr.c ****         
 186:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBFS_episr.c ****         }
 188:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBFS_episr.c ****     }
 190:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBFS_episr.c **** 
 192:Generated_Source\PSoC5/USBFS_episr.c **** 
 193:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBFS_episr.c ****     *
 198:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBFS_episr.c ****     *
 200:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:Generated_Source\PSoC5/USBFS_episr.c ****     {
 117              		.loc 1 202 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 203:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBFS_episr.c **** 
 207:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBFS_episr.c **** 
 209:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBFS_episr.c **** 
 211:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBFS_episr.c ****         {
 214:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBFS_episr.c **** 
 218:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 122              		.loc 1 218 0
 123 0000 0422     		movs	r2, #4
 124 0002 0C4B     		ldr	r3, .L11
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 7


 125 0004 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/USBFS_episr.c **** 
 220:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBFS_episr.c ****         */
 224:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
 226:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 228:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 126              		.loc 1 229 0
 127 0006 0F3B     		subs	r3, r3, #15
 128 0008 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 230:Generated_Source\PSoC5/USBFS_episr.c **** 
 231:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 129              		.loc 1 232 0
 130 000c 0A4B     		ldr	r3, .L11+4
 131 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 132 0012 03F00303 		and	r3, r3, #3
 133 0016 012B     		cmp	r3, #1
 134 0018 06D0     		beq	.L10
 233:Generated_Source\PSoC5/USBFS_episr.c ****             {
 234:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 135              		.loc 1 234 0
 136 001a 074A     		ldr	r2, .L11+4
 137 001c 92F82730 		ldrb	r3, [r2, #39]	@ zero_extendqisi2
 138 0020 83F08003 		eor	r3, r3, #128
 139 0024 82F82730 		strb	r3, [r2, #39]
 140              	.L10:
 235:Generated_Source\PSoC5/USBFS_episr.c ****             }
 236:Generated_Source\PSoC5/USBFS_episr.c **** 
 237:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBFS_episr.c ****             */
 243:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 141              		.loc 1 243 0
 142 0028 0122     		movs	r2, #1
 143 002a 034B     		ldr	r3, .L11+4
 144 002c 83F82520 		strb	r2, [r3, #37]
 145 0030 7047     		bx	lr
 146              	.L12:
 147 0032 00BF     		.align	2
 148              	.L11:
 149 0034 0B600040 		.word	1073766411
 150 0038 00000000 		.word	USBFS_EP
 151              		.cfi_endproc
 152              	.LFE2:
 153              		.size	USBFS_EP_3_ISR, .-USBFS_EP_3_ISR
 154              		.section	.text.USBFS_EP_4_ISR,"ax",%progbits
 155              		.align	2
 156              		.global	USBFS_EP_4_ISR
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 8


 157              		.thumb
 158              		.thumb_func
 159              		.type	USBFS_EP_4_ISR, %function
 160              	USBFS_EP_4_ISR:
 161              	.LFB3:
 244:Generated_Source\PSoC5/USBFS_episr.c ****         }
 245:Generated_Source\PSoC5/USBFS_episr.c **** 
 246:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
 250:Generated_Source\PSoC5/USBFS_episr.c ****             {
 251:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBFS_episr.c ****             }
 253:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBFS_episr.c **** 
 256:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBFS_episr.c **** 
 258:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBFS_episr.c **** 
 260:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBFS_episr.c **** 
 264:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBFS_episr.c ****         
 267:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBFS_episr.c ****         }
 269:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBFS_episr.c ****     }
 271:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBFS_episr.c **** 
 273:Generated_Source\PSoC5/USBFS_episr.c **** 
 274:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 277:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBFS_episr.c ****     *
 279:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBFS_episr.c ****     *
 281:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 283:Generated_Source\PSoC5/USBFS_episr.c ****     {
 162              		.loc 1 283 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 284:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBFS_episr.c **** 
 288:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBFS_episr.c **** 
 290:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 9


 291:Generated_Source\PSoC5/USBFS_episr.c **** 
 292:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBFS_episr.c ****         {
 295:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBFS_episr.c **** 
 299:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 167              		.loc 1 299 0
 168 0000 0822     		movs	r2, #8
 169 0002 0C4B     		ldr	r3, .L15
 170 0004 1A70     		strb	r2, [r3]
 300:Generated_Source\PSoC5/USBFS_episr.c ****         
 301:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBFS_episr.c ****         */
 305:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
 307:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBFS_episr.c ****         {
 309:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
 171              		.loc 1 310 0
 172 0006 0F3B     		subs	r3, r3, #15
 173 0008 93F84230 		ldrb	r3, [r3, #66]	@ zero_extendqisi2
 311:Generated_Source\PSoC5/USBFS_episr.c **** 
 312:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 174              		.loc 1 313 0
 175 000c 0A4B     		ldr	r3, .L15+4
 176 000e 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 177 0012 03F00303 		and	r3, r3, #3
 178 0016 012B     		cmp	r3, #1
 179 0018 06D0     		beq	.L14
 314:Generated_Source\PSoC5/USBFS_episr.c ****             {
 315:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 180              		.loc 1 315 0
 181 001a 074A     		ldr	r2, .L15+4
 182 001c 92F83330 		ldrb	r3, [r2, #51]	@ zero_extendqisi2
 183 0020 83F08003 		eor	r3, r3, #128
 184 0024 82F83330 		strb	r3, [r2, #51]
 185              	.L14:
 316:Generated_Source\PSoC5/USBFS_episr.c ****             }
 317:Generated_Source\PSoC5/USBFS_episr.c **** 
 318:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBFS_episr.c ****             */
 324:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 186              		.loc 1 324 0
 187 0028 0122     		movs	r2, #1
 188 002a 034B     		ldr	r3, .L15+4
 189 002c 83F83120 		strb	r2, [r3, #49]
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 10


 190 0030 7047     		bx	lr
 191              	.L16:
 192 0032 00BF     		.align	2
 193              	.L15:
 194 0034 0B600040 		.word	1073766411
 195 0038 00000000 		.word	USBFS_EP
 196              		.cfi_endproc
 197              	.LFE3:
 198              		.size	USBFS_EP_4_ISR, .-USBFS_EP_4_ISR
 199              		.section	.text.USBFS_EP_5_ISR,"ax",%progbits
 200              		.align	2
 201              		.global	USBFS_EP_5_ISR
 202              		.thumb
 203              		.thumb_func
 204              		.type	USBFS_EP_5_ISR, %function
 205              	USBFS_EP_5_ISR:
 206              	.LFB4:
 325:Generated_Source\PSoC5/USBFS_episr.c ****         }
 326:Generated_Source\PSoC5/USBFS_episr.c **** 
 327:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:Generated_Source\PSoC5/USBFS_episr.c ****             {
 332:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBFS_episr.c ****             }
 334:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBFS_episr.c **** 
 337:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBFS_episr.c **** 
 339:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBFS_episr.c **** 
 341:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBFS_episr.c **** 
 345:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBFS_episr.c ****         
 348:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBFS_episr.c ****         }
 350:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBFS_episr.c ****     }
 352:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBFS_episr.c **** 
 354:Generated_Source\PSoC5/USBFS_episr.c **** 
 355:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBFS_episr.c ****     *
 360:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBFS_episr.c ****     *
 362:Generated_Source\PSoC5/USBFS_episr.c ****     *
 363:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 11


 365:Generated_Source\PSoC5/USBFS_episr.c ****     {
 207              		.loc 1 365 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 366:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBFS_episr.c **** 
 370:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBFS_episr.c **** 
 372:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBFS_episr.c **** 
 374:Generated_Source\PSoC5/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBFS_episr.c ****         {
 377:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBFS_episr.c **** 
 381:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 212              		.loc 1 381 0
 213 0000 1022     		movs	r2, #16
 214 0002 0C4B     		ldr	r3, .L19
 215 0004 1A70     		strb	r2, [r3]
 382:Generated_Source\PSoC5/USBFS_episr.c ****     
 383:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBFS_episr.c ****         */
 387:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 391:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 216              		.loc 1 392 0
 217 0006 0F3B     		subs	r3, r3, #15
 218 0008 93F85230 		ldrb	r3, [r3, #82]	@ zero_extendqisi2
 393:Generated_Source\PSoC5/USBFS_episr.c **** 
 394:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 219              		.loc 1 395 0
 220 000c 0A4B     		ldr	r3, .L19+4
 221 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 222 0012 03F00303 		and	r3, r3, #3
 223 0016 012B     		cmp	r3, #1
 224 0018 06D0     		beq	.L18
 396:Generated_Source\PSoC5/USBFS_episr.c ****             {
 397:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 225              		.loc 1 397 0
 226 001a 074A     		ldr	r2, .L19+4
 227 001c 92F83F30 		ldrb	r3, [r2, #63]	@ zero_extendqisi2
 228 0020 83F08003 		eor	r3, r3, #128
 229 0024 82F83F30 		strb	r3, [r2, #63]
 230              	.L18:
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 12


 398:Generated_Source\PSoC5/USBFS_episr.c ****             }
 399:Generated_Source\PSoC5/USBFS_episr.c **** 
 400:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBFS_episr.c ****             */
 406:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 231              		.loc 1 406 0
 232 0028 0122     		movs	r2, #1
 233 002a 034B     		ldr	r3, .L19+4
 234 002c 83F83D20 		strb	r2, [r3, #61]
 235 0030 7047     		bx	lr
 236              	.L20:
 237 0032 00BF     		.align	2
 238              	.L19:
 239 0034 0B600040 		.word	1073766411
 240 0038 00000000 		.word	USBFS_EP
 241              		.cfi_endproc
 242              	.LFE4:
 243              		.size	USBFS_EP_5_ISR, .-USBFS_EP_5_ISR
 244              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 245              		.align	2
 246              		.global	USBFS_BUS_RESET_ISR
 247              		.thumb
 248              		.thumb_func
 249              		.type	USBFS_BUS_RESET_ISR, %function
 250              	USBFS_BUS_RESET_ISR:
 251              	.LFB5:
 407:Generated_Source\PSoC5/USBFS_episr.c ****         }
 408:Generated_Source\PSoC5/USBFS_episr.c **** 
 409:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:Generated_Source\PSoC5/USBFS_episr.c ****             {
 414:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBFS_episr.c ****             }
 416:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBFS_episr.c **** 
 419:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBFS_episr.c **** 
 421:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBFS_episr.c **** 
 423:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBFS_episr.c **** 
 427:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBFS_episr.c ****         
 430:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBFS_episr.c ****         }
 432:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBFS_episr.c ****     }
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 13


 434:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBFS_episr.c **** 
 436:Generated_Source\PSoC5/USBFS_episr.c **** 
 437:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBFS_episr.c ****     *
 442:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBFS_episr.c ****     *
 444:Generated_Source\PSoC5/USBFS_episr.c ****     *
 445:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:Generated_Source\PSoC5/USBFS_episr.c ****     {
 448:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBFS_episr.c **** 
 452:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBFS_episr.c **** 
 454:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBFS_episr.c **** 
 456:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBFS_episr.c ****         {
 459:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBFS_episr.c **** 
 463:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBFS_episr.c ****         
 465:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBFS_episr.c ****         */
 469:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBFS_episr.c ****         {
 473:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 475:Generated_Source\PSoC5/USBFS_episr.c **** 
 476:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBFS_episr.c ****             {
 479:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBFS_episr.c ****             }
 481:Generated_Source\PSoC5/USBFS_episr.c ****             
 482:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBFS_episr.c ****             */
 488:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBFS_episr.c ****         }
 490:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 14


 491:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:Generated_Source\PSoC5/USBFS_episr.c ****             {
 496:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBFS_episr.c ****             }
 498:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBFS_episr.c **** 
 501:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBFS_episr.c **** 
 503:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBFS_episr.c **** 
 505:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBFS_episr.c **** 
 509:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBFS_episr.c ****         
 512:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBFS_episr.c ****         }
 514:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBFS_episr.c ****     }
 516:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBFS_episr.c **** 
 518:Generated_Source\PSoC5/USBFS_episr.c **** 
 519:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBFS_episr.c ****     *
 524:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBFS_episr.c ****     *
 526:Generated_Source\PSoC5/USBFS_episr.c ****     *
 527:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:Generated_Source\PSoC5/USBFS_episr.c ****     {
 530:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBFS_episr.c **** 
 534:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBFS_episr.c **** 
 536:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBFS_episr.c **** 
 538:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBFS_episr.c ****         {
 541:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBFS_episr.c ****     
 545:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBFS_episr.c ****         
 547:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 15


 548:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBFS_episr.c ****         */
 551:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBFS_episr.c ****         {           
 555:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
 557:Generated_Source\PSoC5/USBFS_episr.c **** 
 558:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBFS_episr.c ****             {
 561:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBFS_episr.c ****             }
 563:Generated_Source\PSoC5/USBFS_episr.c ****             
 564:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBFS_episr.c ****             */
 570:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBFS_episr.c ****         }
 572:Generated_Source\PSoC5/USBFS_episr.c **** 
 573:Generated_Source\PSoC5/USBFS_episr.c **** 
 574:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:Generated_Source\PSoC5/USBFS_episr.c ****             {
 579:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBFS_episr.c ****             }
 581:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBFS_episr.c **** 
 584:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBFS_episr.c **** 
 586:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBFS_episr.c **** 
 588:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBFS_episr.c **** 
 592:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBFS_episr.c ****         
 595:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBFS_episr.c ****         }
 597:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBFS_episr.c ****     }
 599:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBFS_episr.c **** 
 601:Generated_Source\PSoC5/USBFS_episr.c **** 
 602:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 16


 605:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBFS_episr.c ****     *
 607:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBFS_episr.c ****     *
 609:Generated_Source\PSoC5/USBFS_episr.c ****     *
 610:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:Generated_Source\PSoC5/USBFS_episr.c ****     {
 613:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBFS_episr.c **** 
 617:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBFS_episr.c **** 
 619:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBFS_episr.c **** 
 621:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBFS_episr.c ****         {
 624:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBFS_episr.c **** 
 628:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBFS_episr.c ****         
 630:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBFS_episr.c ****         */
 634:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBFS_episr.c ****         {
 638:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:Generated_Source\PSoC5/USBFS_episr.c **** 
 641:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBFS_episr.c ****             {
 644:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBFS_episr.c ****             }
 646:Generated_Source\PSoC5/USBFS_episr.c **** 
 647:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBFS_episr.c ****             */
 653:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBFS_episr.c ****         }
 655:Generated_Source\PSoC5/USBFS_episr.c **** 
 656:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:Generated_Source\PSoC5/USBFS_episr.c ****             {
 661:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 17


 662:Generated_Source\PSoC5/USBFS_episr.c ****             }
 663:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBFS_episr.c **** 
 666:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBFS_episr.c **** 
 668:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBFS_episr.c **** 
 670:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBFS_episr.c **** 
 674:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBFS_episr.c ****         
 677:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBFS_episr.c ****         }
 679:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBFS_episr.c ****     }
 681:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBFS_episr.c **** 
 683:Generated_Source\PSoC5/USBFS_episr.c **** 
 684:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
 687:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBFS_episr.c ****     *
 689:Generated_Source\PSoC5/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBFS_episr.c ****     *
 691:Generated_Source\PSoC5/USBFS_episr.c ****     *
 692:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:Generated_Source\PSoC5/USBFS_episr.c ****     {
 695:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBFS_episr.c **** 
 699:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBFS_episr.c **** 
 701:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBFS_episr.c **** 
 703:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBFS_episr.c **** 
 705:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBFS_episr.c ****     }
 709:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBFS_episr.c **** 
 711:Generated_Source\PSoC5/USBFS_episr.c **** 
 712:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBFS_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBFS_episr.c **** *
 717:Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 18


 719:Generated_Source\PSoC5/USBFS_episr.c **** *
 720:Generated_Source\PSoC5/USBFS_episr.c **** *
 721:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBFS_episr.c **** {
 252              		.loc 1 723 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256 0000 08B5     		push	{r3, lr}
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBFS_episr.c **** 
 728:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBFS_episr.c **** 
 730:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBFS_episr.c **** 
 732:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBFS_episr.c **** 
 734:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
 260              		.loc 1 734 0
 261 0002 FFF7FEFF 		bl	USBFS_ReInitComponent
 262              	.LVL0:
 263 0006 08BD     		pop	{r3, pc}
 264              		.cfi_endproc
 265              	.LFE5:
 266              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 267              		.text
 268              	.Letext0:
 269              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 270              		.file 3 "Generated_Source\\PSoC5\\USBFS.h"
 271              		.file 4 "Generated_Source\\PSoC5\\USBFS_pvt.h"
 272              		.section	.debug_info,"",%progbits
 273              	.Ldebug_info0:
 274 0000 52020000 		.4byte	0x252
 275 0004 0400     		.2byte	0x4
 276 0006 00000000 		.4byte	.Ldebug_abbrev0
 277 000a 04       		.byte	0x4
 278 000b 01       		.uleb128 0x1
 279 000c 85010000 		.4byte	.LASF37
 280 0010 01       		.byte	0x1
 281 0011 8B000000 		.4byte	.LASF38
 282 0015 31000000 		.4byte	.LASF39
 283 0019 00000000 		.4byte	.Ldebug_ranges0+0
 284 001d 00000000 		.4byte	0
 285 0021 00000000 		.4byte	.Ldebug_line0
 286 0025 02       		.uleb128 0x2
 287 0026 01       		.byte	0x1
 288 0027 06       		.byte	0x6
 289 0028 C6020000 		.4byte	.LASF0
 290 002c 02       		.uleb128 0x2
 291 002d 01       		.byte	0x1
 292 002e 08       		.byte	0x8
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 19


 293 002f F0000000 		.4byte	.LASF1
 294 0033 02       		.uleb128 0x2
 295 0034 02       		.byte	0x2
 296 0035 05       		.byte	0x5
 297 0036 94020000 		.4byte	.LASF2
 298 003a 02       		.uleb128 0x2
 299 003b 02       		.byte	0x2
 300 003c 07       		.byte	0x7
 301 003d D2020000 		.4byte	.LASF3
 302 0041 02       		.uleb128 0x2
 303 0042 04       		.byte	0x4
 304 0043 05       		.byte	0x5
 305 0044 AE020000 		.4byte	.LASF4
 306 0048 02       		.uleb128 0x2
 307 0049 04       		.byte	0x4
 308 004a 07       		.byte	0x7
 309 004b 0E010000 		.4byte	.LASF5
 310 004f 02       		.uleb128 0x2
 311 0050 08       		.byte	0x8
 312 0051 05       		.byte	0x5
 313 0052 76020000 		.4byte	.LASF6
 314 0056 02       		.uleb128 0x2
 315 0057 08       		.byte	0x8
 316 0058 07       		.byte	0x7
 317 0059 20020000 		.4byte	.LASF7
 318 005d 03       		.uleb128 0x3
 319 005e 04       		.byte	0x4
 320 005f 05       		.byte	0x5
 321 0060 696E7400 		.ascii	"int\000"
 322 0064 02       		.uleb128 0x2
 323 0065 04       		.byte	0x4
 324 0066 07       		.byte	0x7
 325 0067 13020000 		.4byte	.LASF8
 326 006b 04       		.uleb128 0x4
 327 006c 9E020000 		.4byte	.LASF9
 328 0070 02       		.byte	0x2
 329 0071 9201     		.2byte	0x192
 330 0073 2C000000 		.4byte	0x2c
 331 0077 04       		.uleb128 0x4
 332 0078 69010000 		.4byte	.LASF10
 333 007c 02       		.byte	0x2
 334 007d 9301     		.2byte	0x193
 335 007f 3A000000 		.4byte	0x3a
 336 0083 02       		.uleb128 0x2
 337 0084 04       		.byte	0x4
 338 0085 04       		.byte	0x4
 339 0086 1C000000 		.4byte	.LASF11
 340 008a 02       		.uleb128 0x2
 341 008b 08       		.byte	0x8
 342 008c 04       		.byte	0x4
 343 008d 43010000 		.4byte	.LASF12
 344 0091 02       		.uleb128 0x2
 345 0092 01       		.byte	0x1
 346 0093 08       		.byte	0x8
 347 0094 84020000 		.4byte	.LASF13
 348 0098 04       		.uleb128 0x4
 349 0099 FE000000 		.4byte	.LASF14
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 20


 350 009d 02       		.byte	0x2
 351 009e 3C02     		.2byte	0x23c
 352 00a0 A4000000 		.4byte	0xa4
 353 00a4 05       		.uleb128 0x5
 354 00a5 6B000000 		.4byte	0x6b
 355 00a9 02       		.uleb128 0x2
 356 00aa 04       		.byte	0x4
 357 00ab 07       		.byte	0x7
 358 00ac 5F020000 		.4byte	.LASF15
 359 00b0 06       		.uleb128 0x6
 360 00b1 0C       		.byte	0xc
 361 00b2 03       		.byte	0x3
 362 00b3 88       		.byte	0x88
 363 00b4 25010000 		.4byte	0x125
 364 00b8 07       		.uleb128 0x7
 365 00b9 68020000 		.4byte	.LASF16
 366 00bd 03       		.byte	0x3
 367 00be 8A       		.byte	0x8a
 368 00bf 6B000000 		.4byte	0x6b
 369 00c3 00       		.byte	0
 370 00c4 07       		.uleb128 0x7
 371 00c5 03010000 		.4byte	.LASF17
 372 00c9 03       		.byte	0x3
 373 00ca 8B       		.byte	0x8b
 374 00cb 6B000000 		.4byte	0x6b
 375 00cf 01       		.byte	0x1
 376 00d0 07       		.uleb128 0x7
 377 00d1 37020000 		.4byte	.LASF18
 378 00d5 03       		.byte	0x3
 379 00d6 8C       		.byte	0x8c
 380 00d7 6B000000 		.4byte	0x6b
 381 00db 02       		.byte	0x2
 382 00dc 07       		.uleb128 0x7
 383 00dd E7000000 		.4byte	.LASF19
 384 00e1 03       		.byte	0x3
 385 00e2 8D       		.byte	0x8d
 386 00e3 6B000000 		.4byte	0x6b
 387 00e7 03       		.byte	0x3
 388 00e8 07       		.uleb128 0x7
 389 00e9 20010000 		.4byte	.LASF20
 390 00ed 03       		.byte	0x3
 391 00ee 8E       		.byte	0x8e
 392 00ef 6B000000 		.4byte	0x6b
 393 00f3 04       		.byte	0x4
 394 00f4 07       		.uleb128 0x7
 395 00f5 6F020000 		.4byte	.LASF21
 396 00f9 03       		.byte	0x3
 397 00fa 8F       		.byte	0x8f
 398 00fb 6B000000 		.4byte	0x6b
 399 00ff 05       		.byte	0x5
 400 0100 07       		.uleb128 0x7
 401 0101 5E010000 		.4byte	.LASF22
 402 0105 03       		.byte	0x3
 403 0106 90       		.byte	0x90
 404 0107 77000000 		.4byte	0x77
 405 010b 06       		.byte	0x6
 406 010c 07       		.uleb128 0x7
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 21


 407 010d 89020000 		.4byte	.LASF23
 408 0111 03       		.byte	0x3
 409 0112 91       		.byte	0x91
 410 0113 77000000 		.4byte	0x77
 411 0117 08       		.byte	0x8
 412 0118 07       		.uleb128 0x7
 413 0119 A4020000 		.4byte	.LASF24
 414 011d 03       		.byte	0x3
 415 011e 92       		.byte	0x92
 416 011f 6B000000 		.4byte	0x6b
 417 0123 0A       		.byte	0xa
 418 0124 00       		.byte	0
 419 0125 08       		.uleb128 0x8
 420 0126 B0000000 		.4byte	.LASF25
 421 012a 03       		.byte	0x3
 422 012b 93       		.byte	0x93
 423 012c B0000000 		.4byte	0xb0
 424 0130 06       		.uleb128 0x6
 425 0131 10       		.byte	0x10
 426 0132 03       		.byte	0x3
 427 0133 CF       		.byte	0xcf
 428 0134 69010000 		.4byte	0x169
 429 0138 07       		.uleb128 0x7
 430 0139 D9000000 		.4byte	.LASF26
 431 013d 03       		.byte	0x3
 432 013e D1       		.byte	0xd1
 433 013f 6B000000 		.4byte	0x6b
 434 0143 00       		.byte	0
 435 0144 07       		.uleb128 0x7
 436 0145 E0000000 		.4byte	.LASF27
 437 0149 03       		.byte	0x3
 438 014a D2       		.byte	0xd2
 439 014b 6B000000 		.4byte	0x6b
 440 014f 01       		.byte	0x1
 441 0150 07       		.uleb128 0x7
 442 0151 16000000 		.4byte	.LASF28
 443 0155 03       		.byte	0x3
 444 0156 D3       		.byte	0xd3
 445 0157 6B000000 		.4byte	0x6b
 446 015b 02       		.byte	0x2
 447 015c 09       		.uleb128 0x9
 448 015d 67617000 		.ascii	"gap\000"
 449 0161 03       		.byte	0x3
 450 0162 D4       		.byte	0xd4
 451 0163 69010000 		.4byte	0x169
 452 0167 03       		.byte	0x3
 453 0168 00       		.byte	0
 454 0169 0A       		.uleb128 0xa
 455 016a 6B000000 		.4byte	0x6b
 456 016e 79010000 		.4byte	0x179
 457 0172 0B       		.uleb128 0xb
 458 0173 A9000000 		.4byte	0xa9
 459 0177 0C       		.byte	0xc
 460 0178 00       		.byte	0
 461 0179 08       		.uleb128 0x8
 462 017a 4A010000 		.4byte	.LASF29
 463 017e 03       		.byte	0x3
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 22


 464 017f D5       		.byte	0xd5
 465 0180 30010000 		.4byte	0x130
 466 0184 0C       		.uleb128 0xc
 467 0185 90       		.byte	0x90
 468 0186 03       		.byte	0x3
 469 0187 0901     		.2byte	0x109
 470 0189 9B010000 		.4byte	0x19b
 471 018d 0D       		.uleb128 0xd
 472 018e 34010000 		.4byte	.LASF30
 473 0192 03       		.byte	0x3
 474 0193 0B01     		.2byte	0x10b
 475 0195 9B010000 		.4byte	0x19b
 476 0199 00       		.byte	0
 477 019a 00       		.byte	0
 478 019b 0A       		.uleb128 0xa
 479 019c 79010000 		.4byte	0x179
 480 01a0 AB010000 		.4byte	0x1ab
 481 01a4 0B       		.uleb128 0xb
 482 01a5 A9000000 		.4byte	0xa9
 483 01a9 08       		.byte	0x8
 484 01aa 00       		.byte	0
 485 01ab 04       		.uleb128 0x4
 486 01ac 70010000 		.4byte	.LASF31
 487 01b0 03       		.byte	0x3
 488 01b1 0C01     		.2byte	0x10c
 489 01b3 84010000 		.4byte	0x184
 490 01b7 0E       		.uleb128 0xe
 491 01b8 50020000 		.4byte	.LASF32
 492 01bc 01       		.byte	0x1
 493 01bd 25       		.byte	0x25
 494 01be 00000000 		.4byte	.LFB0
 495 01c2 30000000 		.4byte	.LFE0-.LFB0
 496 01c6 01       		.uleb128 0x1
 497 01c7 9C       		.byte	0x9c
 498 01c8 0E       		.uleb128 0xe
 499 01c9 B7020000 		.4byte	.LASF33
 500 01cd 01       		.byte	0x1
 501 01ce 78       		.byte	0x78
 502 01cf 00000000 		.4byte	.LFB1
 503 01d3 34000000 		.4byte	.LFE1-.LFB1
 504 01d7 01       		.uleb128 0x1
 505 01d8 9C       		.byte	0x9c
 506 01d9 0E       		.uleb128 0xe
 507 01da 22000000 		.4byte	.LASF34
 508 01de 01       		.byte	0x1
 509 01df C9       		.byte	0xc9
 510 01e0 00000000 		.4byte	.LFB2
 511 01e4 3C000000 		.4byte	.LFE2-.LFB2
 512 01e8 01       		.uleb128 0x1
 513 01e9 9C       		.byte	0x9c
 514 01ea 0F       		.uleb128 0xf
 515 01eb 25010000 		.4byte	.LASF35
 516 01ef 01       		.byte	0x1
 517 01f0 1A01     		.2byte	0x11a
 518 01f2 00000000 		.4byte	.LFB3
 519 01f6 3C000000 		.4byte	.LFE3-.LFB3
 520 01fa 01       		.uleb128 0x1
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 23


 521 01fb 9C       		.byte	0x9c
 522 01fc 0F       		.uleb128 0xf
 523 01fd 41020000 		.4byte	.LASF36
 524 0201 01       		.byte	0x1
 525 0202 6C01     		.2byte	0x16c
 526 0204 00000000 		.4byte	.LFB4
 527 0208 3C000000 		.4byte	.LFE4-.LFB4
 528 020c 01       		.uleb128 0x1
 529 020d 9C       		.byte	0x9c
 530 020e 10       		.uleb128 0x10
 531 020f C5000000 		.4byte	.LASF40
 532 0213 01       		.byte	0x1
 533 0214 D202     		.2byte	0x2d2
 534 0216 00000000 		.4byte	.LFB5
 535 021a 08000000 		.4byte	.LFE5-.LFB5
 536 021e 01       		.uleb128 0x1
 537 021f 9C       		.byte	0x9c
 538 0220 2E020000 		.4byte	0x22e
 539 0224 11       		.uleb128 0x11
 540 0225 06000000 		.4byte	.LVL0
 541 0229 4E020000 		.4byte	0x24e
 542 022d 00       		.byte	0
 543 022e 0A       		.uleb128 0xa
 544 022f 25010000 		.4byte	0x125
 545 0233 3E020000 		.4byte	0x23e
 546 0237 0B       		.uleb128 0xb
 547 0238 A9000000 		.4byte	0xa9
 548 023c 08       		.byte	0x8
 549 023d 00       		.byte	0
 550 023e 12       		.uleb128 0x12
 551 023f 3A010000 		.4byte	.LASF41
 552 0243 04       		.byte	0x4
 553 0244 77       		.byte	0x77
 554 0245 49020000 		.4byte	0x249
 555 0249 05       		.uleb128 0x5
 556 024a 2E020000 		.4byte	0x22e
 557 024e 13       		.uleb128 0x13
 558 024f 00000000 		.4byte	.LASF42
 559 0253 04       		.byte	0x4
 560 0254 A2       		.byte	0xa2
 561 0255 00       		.byte	0
 562              		.section	.debug_abbrev,"",%progbits
 563              	.Ldebug_abbrev0:
 564 0000 01       		.uleb128 0x1
 565 0001 11       		.uleb128 0x11
 566 0002 01       		.byte	0x1
 567 0003 25       		.uleb128 0x25
 568 0004 0E       		.uleb128 0xe
 569 0005 13       		.uleb128 0x13
 570 0006 0B       		.uleb128 0xb
 571 0007 03       		.uleb128 0x3
 572 0008 0E       		.uleb128 0xe
 573 0009 1B       		.uleb128 0x1b
 574 000a 0E       		.uleb128 0xe
 575 000b 55       		.uleb128 0x55
 576 000c 17       		.uleb128 0x17
 577 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 24


 578 000e 01       		.uleb128 0x1
 579 000f 10       		.uleb128 0x10
 580 0010 17       		.uleb128 0x17
 581 0011 00       		.byte	0
 582 0012 00       		.byte	0
 583 0013 02       		.uleb128 0x2
 584 0014 24       		.uleb128 0x24
 585 0015 00       		.byte	0
 586 0016 0B       		.uleb128 0xb
 587 0017 0B       		.uleb128 0xb
 588 0018 3E       		.uleb128 0x3e
 589 0019 0B       		.uleb128 0xb
 590 001a 03       		.uleb128 0x3
 591 001b 0E       		.uleb128 0xe
 592 001c 00       		.byte	0
 593 001d 00       		.byte	0
 594 001e 03       		.uleb128 0x3
 595 001f 24       		.uleb128 0x24
 596 0020 00       		.byte	0
 597 0021 0B       		.uleb128 0xb
 598 0022 0B       		.uleb128 0xb
 599 0023 3E       		.uleb128 0x3e
 600 0024 0B       		.uleb128 0xb
 601 0025 03       		.uleb128 0x3
 602 0026 08       		.uleb128 0x8
 603 0027 00       		.byte	0
 604 0028 00       		.byte	0
 605 0029 04       		.uleb128 0x4
 606 002a 16       		.uleb128 0x16
 607 002b 00       		.byte	0
 608 002c 03       		.uleb128 0x3
 609 002d 0E       		.uleb128 0xe
 610 002e 3A       		.uleb128 0x3a
 611 002f 0B       		.uleb128 0xb
 612 0030 3B       		.uleb128 0x3b
 613 0031 05       		.uleb128 0x5
 614 0032 49       		.uleb128 0x49
 615 0033 13       		.uleb128 0x13
 616 0034 00       		.byte	0
 617 0035 00       		.byte	0
 618 0036 05       		.uleb128 0x5
 619 0037 35       		.uleb128 0x35
 620 0038 00       		.byte	0
 621 0039 49       		.uleb128 0x49
 622 003a 13       		.uleb128 0x13
 623 003b 00       		.byte	0
 624 003c 00       		.byte	0
 625 003d 06       		.uleb128 0x6
 626 003e 13       		.uleb128 0x13
 627 003f 01       		.byte	0x1
 628 0040 0B       		.uleb128 0xb
 629 0041 0B       		.uleb128 0xb
 630 0042 3A       		.uleb128 0x3a
 631 0043 0B       		.uleb128 0xb
 632 0044 3B       		.uleb128 0x3b
 633 0045 0B       		.uleb128 0xb
 634 0046 01       		.uleb128 0x1
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 25


 635 0047 13       		.uleb128 0x13
 636 0048 00       		.byte	0
 637 0049 00       		.byte	0
 638 004a 07       		.uleb128 0x7
 639 004b 0D       		.uleb128 0xd
 640 004c 00       		.byte	0
 641 004d 03       		.uleb128 0x3
 642 004e 0E       		.uleb128 0xe
 643 004f 3A       		.uleb128 0x3a
 644 0050 0B       		.uleb128 0xb
 645 0051 3B       		.uleb128 0x3b
 646 0052 0B       		.uleb128 0xb
 647 0053 49       		.uleb128 0x49
 648 0054 13       		.uleb128 0x13
 649 0055 38       		.uleb128 0x38
 650 0056 0B       		.uleb128 0xb
 651 0057 00       		.byte	0
 652 0058 00       		.byte	0
 653 0059 08       		.uleb128 0x8
 654 005a 16       		.uleb128 0x16
 655 005b 00       		.byte	0
 656 005c 03       		.uleb128 0x3
 657 005d 0E       		.uleb128 0xe
 658 005e 3A       		.uleb128 0x3a
 659 005f 0B       		.uleb128 0xb
 660 0060 3B       		.uleb128 0x3b
 661 0061 0B       		.uleb128 0xb
 662 0062 49       		.uleb128 0x49
 663 0063 13       		.uleb128 0x13
 664 0064 00       		.byte	0
 665 0065 00       		.byte	0
 666 0066 09       		.uleb128 0x9
 667 0067 0D       		.uleb128 0xd
 668 0068 00       		.byte	0
 669 0069 03       		.uleb128 0x3
 670 006a 08       		.uleb128 0x8
 671 006b 3A       		.uleb128 0x3a
 672 006c 0B       		.uleb128 0xb
 673 006d 3B       		.uleb128 0x3b
 674 006e 0B       		.uleb128 0xb
 675 006f 49       		.uleb128 0x49
 676 0070 13       		.uleb128 0x13
 677 0071 38       		.uleb128 0x38
 678 0072 0B       		.uleb128 0xb
 679 0073 00       		.byte	0
 680 0074 00       		.byte	0
 681 0075 0A       		.uleb128 0xa
 682 0076 01       		.uleb128 0x1
 683 0077 01       		.byte	0x1
 684 0078 49       		.uleb128 0x49
 685 0079 13       		.uleb128 0x13
 686 007a 01       		.uleb128 0x1
 687 007b 13       		.uleb128 0x13
 688 007c 00       		.byte	0
 689 007d 00       		.byte	0
 690 007e 0B       		.uleb128 0xb
 691 007f 21       		.uleb128 0x21
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 26


 692 0080 00       		.byte	0
 693 0081 49       		.uleb128 0x49
 694 0082 13       		.uleb128 0x13
 695 0083 2F       		.uleb128 0x2f
 696 0084 0B       		.uleb128 0xb
 697 0085 00       		.byte	0
 698 0086 00       		.byte	0
 699 0087 0C       		.uleb128 0xc
 700 0088 13       		.uleb128 0x13
 701 0089 01       		.byte	0x1
 702 008a 0B       		.uleb128 0xb
 703 008b 0B       		.uleb128 0xb
 704 008c 3A       		.uleb128 0x3a
 705 008d 0B       		.uleb128 0xb
 706 008e 3B       		.uleb128 0x3b
 707 008f 05       		.uleb128 0x5
 708 0090 01       		.uleb128 0x1
 709 0091 13       		.uleb128 0x13
 710 0092 00       		.byte	0
 711 0093 00       		.byte	0
 712 0094 0D       		.uleb128 0xd
 713 0095 0D       		.uleb128 0xd
 714 0096 00       		.byte	0
 715 0097 03       		.uleb128 0x3
 716 0098 0E       		.uleb128 0xe
 717 0099 3A       		.uleb128 0x3a
 718 009a 0B       		.uleb128 0xb
 719 009b 3B       		.uleb128 0x3b
 720 009c 05       		.uleb128 0x5
 721 009d 49       		.uleb128 0x49
 722 009e 13       		.uleb128 0x13
 723 009f 38       		.uleb128 0x38
 724 00a0 0B       		.uleb128 0xb
 725 00a1 00       		.byte	0
 726 00a2 00       		.byte	0
 727 00a3 0E       		.uleb128 0xe
 728 00a4 2E       		.uleb128 0x2e
 729 00a5 00       		.byte	0
 730 00a6 3F       		.uleb128 0x3f
 731 00a7 19       		.uleb128 0x19
 732 00a8 03       		.uleb128 0x3
 733 00a9 0E       		.uleb128 0xe
 734 00aa 3A       		.uleb128 0x3a
 735 00ab 0B       		.uleb128 0xb
 736 00ac 3B       		.uleb128 0x3b
 737 00ad 0B       		.uleb128 0xb
 738 00ae 27       		.uleb128 0x27
 739 00af 19       		.uleb128 0x19
 740 00b0 11       		.uleb128 0x11
 741 00b1 01       		.uleb128 0x1
 742 00b2 12       		.uleb128 0x12
 743 00b3 06       		.uleb128 0x6
 744 00b4 40       		.uleb128 0x40
 745 00b5 18       		.uleb128 0x18
 746 00b6 9742     		.uleb128 0x2117
 747 00b8 19       		.uleb128 0x19
 748 00b9 00       		.byte	0
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 27


 749 00ba 00       		.byte	0
 750 00bb 0F       		.uleb128 0xf
 751 00bc 2E       		.uleb128 0x2e
 752 00bd 00       		.byte	0
 753 00be 3F       		.uleb128 0x3f
 754 00bf 19       		.uleb128 0x19
 755 00c0 03       		.uleb128 0x3
 756 00c1 0E       		.uleb128 0xe
 757 00c2 3A       		.uleb128 0x3a
 758 00c3 0B       		.uleb128 0xb
 759 00c4 3B       		.uleb128 0x3b
 760 00c5 05       		.uleb128 0x5
 761 00c6 27       		.uleb128 0x27
 762 00c7 19       		.uleb128 0x19
 763 00c8 11       		.uleb128 0x11
 764 00c9 01       		.uleb128 0x1
 765 00ca 12       		.uleb128 0x12
 766 00cb 06       		.uleb128 0x6
 767 00cc 40       		.uleb128 0x40
 768 00cd 18       		.uleb128 0x18
 769 00ce 9742     		.uleb128 0x2117
 770 00d0 19       		.uleb128 0x19
 771 00d1 00       		.byte	0
 772 00d2 00       		.byte	0
 773 00d3 10       		.uleb128 0x10
 774 00d4 2E       		.uleb128 0x2e
 775 00d5 01       		.byte	0x1
 776 00d6 3F       		.uleb128 0x3f
 777 00d7 19       		.uleb128 0x19
 778 00d8 03       		.uleb128 0x3
 779 00d9 0E       		.uleb128 0xe
 780 00da 3A       		.uleb128 0x3a
 781 00db 0B       		.uleb128 0xb
 782 00dc 3B       		.uleb128 0x3b
 783 00dd 05       		.uleb128 0x5
 784 00de 27       		.uleb128 0x27
 785 00df 19       		.uleb128 0x19
 786 00e0 11       		.uleb128 0x11
 787 00e1 01       		.uleb128 0x1
 788 00e2 12       		.uleb128 0x12
 789 00e3 06       		.uleb128 0x6
 790 00e4 40       		.uleb128 0x40
 791 00e5 18       		.uleb128 0x18
 792 00e6 9742     		.uleb128 0x2117
 793 00e8 19       		.uleb128 0x19
 794 00e9 01       		.uleb128 0x1
 795 00ea 13       		.uleb128 0x13
 796 00eb 00       		.byte	0
 797 00ec 00       		.byte	0
 798 00ed 11       		.uleb128 0x11
 799 00ee 898201   		.uleb128 0x4109
 800 00f1 00       		.byte	0
 801 00f2 11       		.uleb128 0x11
 802 00f3 01       		.uleb128 0x1
 803 00f4 31       		.uleb128 0x31
 804 00f5 13       		.uleb128 0x13
 805 00f6 00       		.byte	0
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 28


 806 00f7 00       		.byte	0
 807 00f8 12       		.uleb128 0x12
 808 00f9 34       		.uleb128 0x34
 809 00fa 00       		.byte	0
 810 00fb 03       		.uleb128 0x3
 811 00fc 0E       		.uleb128 0xe
 812 00fd 3A       		.uleb128 0x3a
 813 00fe 0B       		.uleb128 0xb
 814 00ff 3B       		.uleb128 0x3b
 815 0100 0B       		.uleb128 0xb
 816 0101 49       		.uleb128 0x49
 817 0102 13       		.uleb128 0x13
 818 0103 3F       		.uleb128 0x3f
 819 0104 19       		.uleb128 0x19
 820 0105 3C       		.uleb128 0x3c
 821 0106 19       		.uleb128 0x19
 822 0107 00       		.byte	0
 823 0108 00       		.byte	0
 824 0109 13       		.uleb128 0x13
 825 010a 2E       		.uleb128 0x2e
 826 010b 00       		.byte	0
 827 010c 3F       		.uleb128 0x3f
 828 010d 19       		.uleb128 0x19
 829 010e 03       		.uleb128 0x3
 830 010f 0E       		.uleb128 0xe
 831 0110 3A       		.uleb128 0x3a
 832 0111 0B       		.uleb128 0xb
 833 0112 3B       		.uleb128 0x3b
 834 0113 0B       		.uleb128 0xb
 835 0114 27       		.uleb128 0x27
 836 0115 19       		.uleb128 0x19
 837 0116 3C       		.uleb128 0x3c
 838 0117 19       		.uleb128 0x19
 839 0118 00       		.byte	0
 840 0119 00       		.byte	0
 841 011a 00       		.byte	0
 842              		.section	.debug_aranges,"",%progbits
 843 0000 44000000 		.4byte	0x44
 844 0004 0200     		.2byte	0x2
 845 0006 00000000 		.4byte	.Ldebug_info0
 846 000a 04       		.byte	0x4
 847 000b 00       		.byte	0
 848 000c 0000     		.2byte	0
 849 000e 0000     		.2byte	0
 850 0010 00000000 		.4byte	.LFB0
 851 0014 30000000 		.4byte	.LFE0-.LFB0
 852 0018 00000000 		.4byte	.LFB1
 853 001c 34000000 		.4byte	.LFE1-.LFB1
 854 0020 00000000 		.4byte	.LFB2
 855 0024 3C000000 		.4byte	.LFE2-.LFB2
 856 0028 00000000 		.4byte	.LFB3
 857 002c 3C000000 		.4byte	.LFE3-.LFB3
 858 0030 00000000 		.4byte	.LFB4
 859 0034 3C000000 		.4byte	.LFE4-.LFB4
 860 0038 00000000 		.4byte	.LFB5
 861 003c 08000000 		.4byte	.LFE5-.LFB5
 862 0040 00000000 		.4byte	0
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 29


 863 0044 00000000 		.4byte	0
 864              		.section	.debug_ranges,"",%progbits
 865              	.Ldebug_ranges0:
 866 0000 00000000 		.4byte	.LFB0
 867 0004 30000000 		.4byte	.LFE0
 868 0008 00000000 		.4byte	.LFB1
 869 000c 34000000 		.4byte	.LFE1
 870 0010 00000000 		.4byte	.LFB2
 871 0014 3C000000 		.4byte	.LFE2
 872 0018 00000000 		.4byte	.LFB3
 873 001c 3C000000 		.4byte	.LFE3
 874 0020 00000000 		.4byte	.LFB4
 875 0024 3C000000 		.4byte	.LFE4
 876 0028 00000000 		.4byte	.LFB5
 877 002c 08000000 		.4byte	.LFE5
 878 0030 00000000 		.4byte	0
 879 0034 00000000 		.4byte	0
 880              		.section	.debug_line,"",%progbits
 881              	.Ldebug_line0:
 882 0000 01010000 		.section	.debug_str,"MS",%progbits,1
 882      02006200 
 882      00000201 
 882      FB0E0D00 
 882      01010101 
 883              	.LASF42:
 884 0000 55534246 		.ascii	"USBFS_ReInitComponent\000"
 884      535F5265 
 884      496E6974 
 884      436F6D70 
 884      6F6E656E 
 885              	.LASF28:
 886 0016 65704372 		.ascii	"epCr0\000"
 886      3000
 887              	.LASF11:
 888 001c 666C6F61 		.ascii	"float\000"
 888      7400
 889              	.LASF34:
 890 0022 55534246 		.ascii	"USBFS_EP_3_ISR\000"
 890      535F4550 
 890      5F335F49 
 890      535200
 891              	.LASF39:
 892 0031 433A5C55 		.ascii	"C:\\Users\\Nelson\\Desktop\\121 labs\\CMPE121 Lab P"
 892      73657273 
 892      5C4E656C 
 892      736F6E5C 
 892      4465736B 
 893 005f 726F6A65 		.ascii	"roject\\Oscilloscope\\PSOC\\Oscilliscope.cydsn\000"
 893      63745C4F 
 893      7363696C 
 893      6C6F7363 
 893      6F70655C 
 894              	.LASF38:
 895 008b 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_episr.c\000"
 895      72617465 
 895      645F536F 
 895      75726365 
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 30


 895      5C50536F 
 896              	.LASF25:
 897 00b0 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 897      4246535F 
 897      45505F43 
 897      544C5F42 
 897      4C4F434B 
 898              	.LASF40:
 899 00c5 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 899      535F4255 
 899      535F5245 
 899      5345545F 
 899      49535200 
 900              	.LASF26:
 901 00d9 6570436E 		.ascii	"epCnt0\000"
 901      743000
 902              	.LASF27:
 903 00e0 6570436E 		.ascii	"epCnt1\000"
 903      743100
 904              	.LASF19:
 905 00e7 6570546F 		.ascii	"epToggle\000"
 905      67676C65 
 905      00
 906              	.LASF1:
 907 00f0 756E7369 		.ascii	"unsigned char\000"
 907      676E6564 
 907      20636861 
 907      7200
 908              	.LASF14:
 909 00fe 72656738 		.ascii	"reg8\000"
 909      00
 910              	.LASF17:
 911 0103 61706945 		.ascii	"apiEpState\000"
 911      70537461 
 911      746500
 912              	.LASF5:
 913 010e 6C6F6E67 		.ascii	"long unsigned int\000"
 913      20756E73 
 913      69676E65 
 913      6420696E 
 913      7400
 914              	.LASF20:
 915 0120 61646472 		.ascii	"addr\000"
 915      00
 916              	.LASF35:
 917 0125 55534246 		.ascii	"USBFS_EP_4_ISR\000"
 917      535F4550 
 917      5F345F49 
 917      535200
 918              	.LASF30:
 919 0134 73696545 		.ascii	"sieEp\000"
 919      7000
 920              	.LASF41:
 921 013a 55534246 		.ascii	"USBFS_EP\000"
 921      535F4550 
 921      00
 922              	.LASF12:
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 31


 923 0143 646F7562 		.ascii	"double\000"
 923      6C6500
 924              	.LASF29:
 925 014a 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 925      535F7369 
 925      655F6570 
 925      5F737472 
 925      75637400 
 926              	.LASF22:
 927 015e 62756666 		.ascii	"buffOffset\000"
 927      4F666673 
 927      657400
 928              	.LASF10:
 929 0169 75696E74 		.ascii	"uint16\000"
 929      313600
 930              	.LASF31:
 931 0170 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 931      535F7369 
 931      655F6570 
 931      735F7374 
 931      72756374 
 932              	.LASF37:
 933 0185 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 933      4320342E 
 933      392E3320 
 933      32303135 
 933      30333033 
 934 01b8 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 934      20726576 
 934      6973696F 
 934      6E203232 
 934      31323230 
 935 01eb 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 935      66756E63 
 935      74696F6E 
 935      2D736563 
 935      74696F6E 
 936              	.LASF8:
 937 0213 756E7369 		.ascii	"unsigned int\000"
 937      676E6564 
 937      20696E74 
 937      00
 938              	.LASF7:
 939 0220 6C6F6E67 		.ascii	"long long unsigned int\000"
 939      206C6F6E 
 939      6720756E 
 939      7369676E 
 939      65642069 
 940              	.LASF18:
 941 0237 68774570 		.ascii	"hwEpState\000"
 941      53746174 
 941      6500
 942              	.LASF36:
 943 0241 55534246 		.ascii	"USBFS_EP_5_ISR\000"
 943      535F4550 
 943      5F355F49 
 943      535200
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 32


 944              	.LASF32:
 945 0250 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 945      535F4550 
 945      5F315F49 
 945      535200
 946              	.LASF15:
 947 025f 73697A65 		.ascii	"sizetype\000"
 947      74797065 
 947      00
 948              	.LASF16:
 949 0268 61747472 		.ascii	"attrib\000"
 949      696200
 950              	.LASF21:
 951 026f 65704D6F 		.ascii	"epMode\000"
 951      646500
 952              	.LASF6:
 953 0276 6C6F6E67 		.ascii	"long long int\000"
 953      206C6F6E 
 953      6720696E 
 953      7400
 954              	.LASF13:
 955 0284 63686172 		.ascii	"char\000"
 955      00
 956              	.LASF23:
 957 0289 62756666 		.ascii	"bufferSize\000"
 957      65725369 
 957      7A6500
 958              	.LASF2:
 959 0294 73686F72 		.ascii	"short int\000"
 959      7420696E 
 959      7400
 960              	.LASF9:
 961 029e 75696E74 		.ascii	"uint8\000"
 961      3800
 962              	.LASF24:
 963 02a4 696E7465 		.ascii	"interface\000"
 963      72666163 
 963      6500
 964              	.LASF4:
 965 02ae 6C6F6E67 		.ascii	"long int\000"
 965      20696E74 
 965      00
 966              	.LASF33:
 967 02b7 55534246 		.ascii	"USBFS_EP_2_ISR\000"
 967      535F4550 
 967      5F325F49 
 967      535200
 968              	.LASF0:
 969 02c6 7369676E 		.ascii	"signed char\000"
 969      65642063 
 969      68617200 
 970              	.LASF3:
 971 02d2 73686F72 		.ascii	"short unsigned int\000"
 971      7420756E 
 971      7369676E 
 971      65642069 
 971      6E7400
ARM GAS  C:\Users\Nelson\AppData\Local\Temp\cczshFH9.s 			page 33


 972              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
